#!/usr/bin/make -f

export DH_VERBOSE=1
export DEB_BUILD_OPTIONS="nostrip"
NCPUS := $(shell getconf _NPROCESSORS_ONLN 2>/dev/null || echo 1)

ifeq ($(NCPUS),-1)
	NCPUS:=1
endif

ifeq ($(NCPUS),0)
	NCPUS:=1
endif

NCPUS:=16
DEB_HOST_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_BUILD_ARCH ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH)

ifeq (nostrip,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	DEBUG_BUILD=1
endif
ifeq (noopt,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	DEBUG_BUILD=1
endif
ifdef DEBUG_BUILD
	# this enables -g and disables stripping of binaries
	CONFIGURE_OPTS += --compile-type=debug
endif

#ifeq "$(DEB_BUILD_ARCH)" "i386"
#	CONFIGURE_OPTS += --enable-runtime-cpudetect --enable-xvmc --enable-xvmc-vld --enable-xvmc-pro --enable-opengl-video
## --enable-mmx --arch=i486 --cpu=i486 --tune=i486 
#else
#ifeq "$(DEB_BUILD_ARCH)" "sparc"
#	CONFIGURE_OPTS += --enable-xvmc --enable-xvmc-vld --enable-xvmc-pro --extra-cflags="-mtune=ultrasparc -mcpu=ultrasparc"
#else
#ifeq "$(DEB_BUILD_ARCH)" "alpha"
#	CONFIGURE_OPTS += --extra-cflags=-std=gnu99
#else
#ifeq "$(DEB_BUILD_ARCH)" "amd64"
#	CONFIGURE_OPTS += --enable-xvmc --enable-xvmc-vld --enable-xvmc-pro --enable-opengl-video
#else 
#ifeq "$(DEB_BUILD_ARCH)" "powerpc"
#        CONFIGURE_OPTS += --disable-altivec
#endif
#endif
#endif
#endif
#endif

configure: configure-stamp
configure-stamp: 
	dh_testdir

	./configure --compile-type=profile --prefix=/usr --enable-libfftw3 --enable-nonfree --enable-pic $(CONFIGURE_OPTS)

	echo "EXTRALIBS+=-lpthread" >> config.mak

	echo "QMAKE_LFLAGS+=-Wl,--as-needed" >> libs/libmythbase/mythconfig.mak

#ifeq "$(DEB_BUILD_ARCH)" "ia64"
#	perl -i -pe 's,-O3,-Os,' libs/libmythdb/mythconfig.mak
#	perl -i -pe 's,CONFIG_SMALL 0,CONFIG_SMALL 1,' config.h
#else

ifeq "$(DEB_BUILD_ARCH)" "sparc"
	perl -i -pe 's,HAVE_VIS 1,HAVE_VIS 0,' config.h
	perl -i -pe 's,HAVE_VIS=yes,,' config.mak
	perl -i -pe 's,MPEG2_ACCEL_SPARC_VIS 1,MPEG2_ACCEL_SPARC_VIS 0,' libs/libmythmpeg2/mpeg2.h
endif

#	exit 1

	touch $@

build: build-stamp
build-stamp: configure-stamp
	dh_testdir

	$(MAKE) -j $(NCPUS)

	touch $@

clean: 
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	[ -h config.mak ] || `cp debian/config.mak libs/libmythdb/mythconfig.mak && touch external/FFmpeg/config.mak && ln -s libs/libmythdb/mythconfig.mak config.mak`
#	[ -h config.mak ] || `cp debian/config.mak libs/libmythdb/mythconfig.mak && cp debian/config.mak external/FFmpeg/config.mak && ln -s libs/libmythdb/mythconfig.mak config.mak`

	[ ! -f Makefile ] || $(MAKE) distclean

	debconf-updatepo

	dh_clean version.cpp external/FFmpeg/mythffmpeg config.log external/FFmpeg/mythffplay

# config.log version.cpp config.ep bindings/perl/Makefile.perl.old \
#	config/Makefile

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	dh_installdirs -pmythtv-backend var/lib/mythtv var/cache/mythtv \
	var/log/mythtv usr/share/doc/mythtv-backend
	dh_installdirs -pmythtv-common etc/mythtv

	$(MAKE) install PREFIX=usr INSTALL_ROOT=$(CURDIR)/debian/tmp

	rm debian/tmp/usr/local/lib/perl/*/auto/MythTV/.packlist
	rm debian/tmp/usr/share/mythtv/themes/Terra/watermarks/README.license

	find debian/tmp/usr/share -type f -exec chmod 0644 {} \;

# Keep executable
	chmod +x debian/tmp/usr/share/mythtv/*.pl
	chmod +x debian/tmp/usr/share/mythtv/metadata/Television/ttvdb.py
	chmod +x debian/tmp/usr/share/mythtv/metadata/Movie/tmdb.py
	chmod +x debian/tmp/usr/share/mythtv/internetcontent/*.py
	chmod +x debian/tmp/usr/share/mythtv/internetcontent/*.pl

	dh_install -X.a -XCOPYING -Xusr/bin/mythwikiscripts -Xusr/share/mythtv/fonts --fail-missing

	dh_install -pmythtv-frontend debian/mythtv.desktop usr/share/applications
	dh_install -XCOPYING -pmythtv-backend debian/mythtv-setup.desktop usr/share/applications

	dh_link -pmythtv-common usr/share/fonts/truetype/freefont/FreeSans.ttf				usr/share/mythtv/fonts/FreeSans.ttf
	dh_link -pmythtv-common usr/share/fonts/truetype/freefont/FreeSansBold.ttf			usr/share/mythtv/fonts/FreeSansBold.ttf
	dh_link -pmythtv-common usr/share/fonts/truetype/freefont/FreeMono.ttf				usr/share/mythtv/fonts/FreeMono.ttf
	dh_link -pmythtv-common usr/share/fonts/truetype/ttf-tiresias/tiresias_infofont_italic.ttf	"usr/share/mythtv/fonts/Tiresias Infofont Italic.ttf"
	dh_link -pmythtv-common usr/share/fonts/truetype/ttf-tiresias/tiresias_infofont.ttf		"usr/share/mythtv/fonts/Tiresias Infofont.ttf"
	dh_link -pmythtv-common usr/share/fonts/truetype/ttf-tiresias/tiresias_infofont_bold.ttf	"usr/share/mythtv/fonts/Tiresias Infofont Bold.ttf"

	rm -f debian/mythtv/usr/share/mythtv/setup.xml

# Autogenerated configuration files
	set -e; \
	for cf in debian/mythtv-common/usr/share/mythtv/mysql.txt; do \
		ln -s /etc/mythtv/`basename $$cf` $$cf; \
	done

binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installdebconf -i
	dh_installdocs -i -A -XCOPYING README debian/README.Debian AUTHORS FAQ UPGRADING keys.txt
	dh_installexamples -pmythtv-doc contrib/*
	dh_installchangelogs -i
	dh_installcron -i
# Only in -fixes packages
#	cp ChangeLog /tmp
#	find debian/*/ -name changelog | xargs -r rm
#	cp /tmp/ChangeLog debian/mythtv-common/usr/share/doc/mythtv-common/changelog
	dh_link -i
	dh_perl -i
	dh_pysupport -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i -- -Zbzip2

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
	dh_installdocs -XCOPYING -a -A README debian/README.Debian AUTHORS keys.txt FAQ UPGRADING
	dh_installchangelogs -a
# Only in -fixes packages
	find debian/*/ -name changelog | xargs -r rm
	dh_installdebconf -a
	dh_installexamples -a
	dh_installmenu -a
	dh_installlogrotate -a

	# logroate 3.8+ requires an additional "su" command which is not
	# backportable, see #640493
	if dpkg --compare-versions `apt-cache show logrotate | grep ^Version | cut -f2- -d' '` ge 3.8; then \
	echo "Fixing logrotate configuration for logrotate >= 3.8..."; \
	sed -i '/^}/ i\	su mythtv mythtv' debian/mythtv-backend/etc/logrotate.d/*; \
	fi

	dh_installinit -a -u'defaults 40 16'
	dh_installcron -a
	dh_installinfo -a
	dh_pysupport -a
ifneq (nostrip,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	dh_strip -a
endif
	dh_link -a
	dh_compress -a -X.py -X.pl
	dh_fixperms -a -X.pl -X.py
	dh_makeshlibs -a -V
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a -- -Zbzip2

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
